<!doctype html>
<html lang="ru">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>–ù–µ–±–æ–ª—å—à–æ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ</title>
<style>
  :root{
    --bg:#0f1724;
    --card:#0b1220;
    --accent:#ff5c8a;
    --muted:#9aa6bd;
    --glass: rgba(255,255,255,0.04);
  }
  html,body{height:100%;margin:0;font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,"Helvetica Neue",Arial;}
  body{
    background:
      radial-gradient(1200px 600px at 10% 10%, rgba(255,92,138,0.06), transparent 10%),
      radial-gradient(900px 400px at 90% 90%, rgba(85,120,255,0.04), transparent 10%),
      var(--bg);
    display:flex;align-items:center;justify-content:center;
    color:#e6eef8;
    -webkit-font-smoothing:antialiased;
    -moz-osx-font-smoothing:grayscale;
    padding:24px;
  }

  .card{
    width:100%;
    max-width:720px;
    background:linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
    border-radius:18px;
    box-shadow: 0 10px 30px rgba(2,6,23,0.6);
    padding:28px;
    display:grid;
    grid-template-columns: 1fr 360px;
    gap:24px;
    align-items:center;
    position:relative;
    overflow:hidden;
  }

  @media (max-width:880px){
    .card{grid-template-columns:1fr; padding:20px;}
  }

  .left {
    padding:12px 6px;
  }
  h1{
    margin:0 0 8px 0;font-size:26px;letter-spacing:-0.02em;
  }
  p.lead{margin:0 0 18px 0;color:var(--muted);}

  .bubble{
    background:var(--glass);
    border-radius:12px;padding:14px;
    margin-bottom:14px;color:#dbe9ff;
    border:1px solid rgba(255,255,255,0.02);
  }

  .choices{display:flex;flex-direction:column;gap:10px;}
  .btn{
    border:0;cursor:pointer;padding:12px 14px;border-radius:10px;font-weight:600;
    background:linear-gradient(90deg,#132033, #0b1b2a); color:#dff1ff;
    box-shadow: 0 6px 18px rgba(2,6,23,0.6);
    transition:transform .12s ease, box-shadow .12s ease, opacity .12s;
    text-align:left;
    display:flex;gap:12px;align-items:center;
  }
  .btn:active{transform:translateY(1px)}
  .btn .emoji{font-size:18px}
  .btn.secondary{
    background:transparent;border:1px solid rgba(255,255,255,0.04); color:var(--muted);
  }
  .small{font-size:13px;color:var(--muted);}

  .right{
    display:flex;flex-direction:column;align-items:center;justify-content:center;
    gap:12px;padding:12px;
  }

  .card-art{
    width:100%;height:260px;border-radius:12px;background:
      linear-gradient(180deg, rgba(255,92,138,0.12), rgba(85,120,255,0.06));
    display:flex;align-items:center;justify-content:center;flex-direction:column;
    color:white;text-align:center;padding:16px;
    position:relative;overflow:hidden;border:1px solid rgba(255,255,255,0.03);
  }
  .heart{
    font-size:78px;line-height:1;margin:4px 0;filter:drop-shadow(0 6px 18px rgba(255,0,120,0.18));
    transform-origin:center;
    animation:beat 1200ms infinite;
  }
  @keyframes beat{
    0%{transform:scale(1)}
    30%{transform:scale(1.14)}
    60%{transform:scale(0.98)}
    100%{transform:scale(1)}
  }

  .footer{
    display:flex;gap:8px;align-items:center;justify-content:center;margin-top:10px;
    color:var(--muted);font-size:13px;
  }

  input[name="name"]{
    width:100%;padding:10px 12px;border-radius:10px;border:1px solid rgba(255,255,255,0.04);
    background:transparent;color:inherit;outline:none;font-size:15px;
  }

  .result{
    text-align:center;padding:18px;border-radius:12px;background:linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
    border:1px solid rgba(255,255,255,0.03);
  }
  .result h2{margin:8px 0 6px 0;font-size:22px}
  .result p{margin:0;color:var(--muted)}
  .big-cta{
    margin-top:12px;padding:12px 16px;border-radius:12px;border:0;font-weight:700;cursor:pointer;
    background:linear-gradient(90deg,var(--accent), #6b6dff);color:white;font-size:16px;
  }
  /* floating hearts */
  .floating-heart{
    position:absolute;pointer-events:none;user-select:none;
    font-size:20px;opacity:.9;transform:translate(-50%,-50%);
    animation:floatUp linear infinite;
  }
  @keyframes floatUp{
    to{transform:translate(-50%,-160%) rotate(20deg); opacity:0}
  }

  /* tiny helper */
  .muted{color:var(--muted)}
</style>
</head>
<body>
<div class="card" role="application" aria-label="–ò–≥—Ä–∞-–ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –≤ –ª—é–±–≤–∏">
  <div class="left">
    <h1>–ù–µ–±–æ–ª—å—à–∞—è –∏–≥—Ä–∞ ‚Äî –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ üíå</h1>
    <p class="lead">–°–¥–µ–ª–∞–π –∏–≥—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π: –≤–≤–µ–¥–∏ –∏–º—è, –æ—Ç–≤–µ—Ç—å –Ω–∞ –ø–∞—Ä—É –∑–∞–±–∞–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ –≤ –∫–æ–Ω—Ü–µ –ø–æ—è–≤–∏—Ç—Å—è —Ç–≤–æ—ë –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ.</p>

    <div class="bubble" id="intro">
      <label class="small muted">–ö–æ–º—É –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ?</label>
      <input id="targetName" name="name" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–∞—Ä–∏–Ω–∞" aria-label="–ò–º—è –ª—é–±–∏–º–æ–≥–æ" />
    </div>

    <div id="stepArea">
      <div class="bubble">
        <div class="small muted">–í—ã–±–µ—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π –∏–≥—Ä—ã</div>
        <div class="choices" id="choices0">
          <button class="btn" data-choice="romantic"><span class="emoji">üåπ</span><div><strong>–†–æ–º–∞–Ω—Ç–∏—á–Ω–æ</strong><div class="small muted">–º–Ω–æ–≥–æ —Å–µ—Ä–¥–µ—á–µ–∫ –∏ —Å–≤–µ—á–µ–π</div></div></button>
          <button class="btn" data-choice="funny"><span class="emoji">üòÑ</span><div><strong>–í–µ—Å–µ–ª–æ</strong><div class="small muted">—à—É—Ç–∫–∏ –∏ –º–µ–º—ã</div></div></button>
          <button class="btn secondary" id="surpriseBtn"><span class="emoji">‚ú®</span><div><strong>–°—é—Ä–ø—Ä–∏–∑</strong><div class="small muted">–ø—É—Å—Ç—å –∏–≥—Ä–∞ —Å–∞–º–∞ —Ä–µ—à–∏—Ç</div></div></button>
        </div>
      </div>

      <div class="bubble" style="display:none" id="qBlock">
        <div class="small muted">–ö–∞–∫–æ–π –ø–æ–¥–∞—Ä–æ–∫ –ª—é–±–∏–º–æ–º—É –Ω—Ä–∞–≤–∏–ª—Å—è –±—ã –±–æ–ª—å—à–µ?</div>
        <div class="choices" id="choices1">
          <button class="btn" data-choice="flowers">–ë—É–∫–µ—Ç</button>
          <button class="btn" data-choice="picnic">–ü–∏–∫–Ω–∏–∫</button>
          <button class="btn" data-choice="movie">–í–µ—á–µ—Ä –∫–∏–Ω–æ</button>
        </div>
      </div>

      <div class="bubble" id="playHint" style="display:none">
        <div class="small muted">–ì–æ—Ç–æ–≤–æ ‚Äî –Ω–∞–∂–º–∏ –±–æ–ª—å—à—É—é –∫–Ω–æ–ø–∫—É —Å–ø—Ä–∞–≤–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ</div>
      </div>
    </div>

    <div style="margin-top:16px" class="small muted">–ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤ –∫–æ–Ω—Ü–µ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—ë –ª—é–±–∏–º–æ–º—É.</div>
  </div>

  <div class="right">
    <div class="card-art" aria-hidden="false">
      <div style="position:absolute;left:12px;top:12px;color:rgba(255,255,255,0.06);font-size:12px">‚Äî –Ω–µ–±–æ–ª—å—à–æ–π —Å—é—Ä–ø—Ä–∏–∑ ‚Äî</div>
      <div class="heart" id="bigHeart">‚ù§</div>
      <div class="muted" id="subtitle">–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å</div>
      <canvas id="confettiCanvas" style="position:absolute;inset:0;pointer-events:none"></canvas>
    </div>

    <div id="resultArea" style="width:100%">
      <div class="result" id="resultBox">
        <h2 id="resultTitle">–ì–æ—Ç–æ–≤–∞(–µ–Ω) –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ?</h2>
        <p id="resultText" class="muted">–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äî –∏ —ç–∫—Ä–∞–Ω –Ω–∞–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–µ–ø–ª–æ–º.</p>
        <button id="revealBtn" class="big-cta" aria-label="–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ">–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ</button>
      </div>

      <div class="footer">
        <div class="small muted">–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è ‚Äî –º–æ–∂–µ—à—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –∫–æ–¥–µ</div>
      </div>
    </div>
  </div>

  <!-- decorative floating hearts (generated by JS) -->
</div>

<script>
/* Simple interactive logic + confetti */
const targetInput = document.getElementById('targetName');
const choices0 = document.getElementById('choices0');
const choices1 = document.getElementById('choices1');
const qBlock = document.getElementById('qBlock');
const playHint = document.getElementById('playHint');
const subtitle = document.getElementById('subtitle');
const revealBtn = document.getElementById('revealBtn');
const resultTitle = document.getElementById('resultTitle');
const resultText = document.getElementById('resultText');
const bigHeart = document.getElementById('bigHeart');
const surpriseBtn = document.getElementById('surpriseBtn');

let gameState = {
  mood: null,
  gift: null,
};

function randomChoice(arr){ return arr[Math.floor(Math.random()*arr.length)]; }

/* Step 1: mood selection */
choices0.addEventListener('click', (e)=>{
  const btn = e.target.closest('button');
  if(!btn) return;
  const mood = btn.dataset.choice || (btn.id === 'surpriseBtn' ? 'surprise' : null);
  gameState.mood = mood;
  // show next question
  qBlock.style.display = 'block';
  playHint.style.display = 'block';
  subtitle.textContent = mood === 'funny' ? '–£–ª—ã–±–Ω–∏—Å—å üòÑ' : (mood === 'romantic' ? '–î–ª—è —Å–µ—Ä–¥—Ü–∞ ‚Äî —Ç–æ–ª—å–∫–æ –ª—É—á—à–µ–µ' : '–ß—Ç–æ-—Ç–æ –≤–æ–ª—à–µ–±–Ω–æ–µ... ‚ú®');
});

/* Step 2: gift selection */
choices1.addEventListener('click', (e)=>{
  const btn = e.target.closest('button');
  if(!btn) return;
  gameState.gift = btn.dataset.choice;
  playHint.style.display = 'block';
  // small visual feedback
  btn.animate([{transform:'translateX(-4px)'},{transform:'translateX(0)'}],{duration:180});
});

/* reveal logic */
revealBtn.addEventListener('click', ()=>{
  const name = (targetInput.value || '–¢—ã').trim();
  // If surprise mood not chosen, ensure defaults
  if(!gameState.mood) gameState.mood = 'romantic';
  if(!gameState.gift) gameState.gift = randomChoice(['picnic','movie','flowers']);

  // Build message variants
  const variants = {
    romantic: [
      `–î–æ—Ä–æ–≥–∞—è(–æ–π) ${name}, –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ —Å —Ç–æ–±–æ–π ‚Äî –∫–∞–∫ –ø–µ—Å–Ω—è. –•–æ—á—É –±—ã—Ç—å —Ä—è–¥–æ–º –≤—Å–µ–≥–¥–∞.`,
      `${name}, —Ç—ã ‚Äî –º–æ—ë —Å–∞–º–æ–µ —Ç—ë–ø–ª–æ–µ –º–µ—Å—Ç–æ. –ü—Ä–∏–º–∏ –º–æ—ë –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ: —è –≤–ª—é–±–ª—ë–Ω(–∞) –≤ —Ç–µ–±—è.`,
    ],
    funny: [
      `${name}, —è –¥—É–º–∞–ª(–∞) -- –Ω—É–∂–µ–Ω Wi-Fi, –∫–æ—Ñ–µ –∏ —Ç—ã. –ë–µ–∑ —Ç–µ–±—è –Ω–∏ –æ–¥–∏–Ω –∏–∑ —Ç—Ä—ë—Ö –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.`,
      `${name}, –µ—Å–ª–∏ –±—ã –ª—é–±–æ–≤—å –±—ã–ª–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ–º, —è –±—ã –ø—Ä–æ—á–∏—Ç–∞–ª(–∞) –µ—ë 100500 —Ä–∞–∑.`,
    ],
    surprise: [
      `${name}, —É –º–µ–Ω—è –¥–ª—è —Ç–µ–±—è —Å—é—Ä–ø—Ä–∏–∑: —è —Ç–µ–±—è –æ—á–µ–Ω—å –ª—é–±–ª—é. –ì–æ—Ç–æ–≤(–∞) –ø—Ä–æ–≤–µ—Å—Ç–∏ —ç—Ç–æ—Ç —Å—é—Ä–ø—Ä–∏–∑ –≤–º–µ—Å—Ç–µ?`,
      `${name}, –≤–æ—Ç –∫—Ä–∞—Ç–∫–æ: —Ç—ã ‚Äî –ø—Ä–∏—á–∏–Ω–∞ –º–æ–∏—Ö —É–ª—ã–±–æ–∫. –≠—Ç–æ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ ‚Äî –º–æ—ë –º–∞–ª–µ–Ω—å–∫–æ–µ ¬´–¥–∞¬ª —Ç–µ–±–µ.`,
    ]
  };

  const chosenArray = variants[gameState.mood] || variants['romantic'];
  const chosenText = randomChoice(chosenArray);

  // personalize further with gift
  let giftLine = '';
  if(gameState.gift === 'flowers') giftLine = '–û–±–µ—â–∞—é –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Ç–µ–±–µ —Ü–≤–µ—Ç—ã –±–µ–∑ –ø–æ–≤–æ–¥–∞.';
  if(gameState.gift === 'picnic') giftLine = '–î–∞–≤–∞–π —É—Å—Ç—Ä–æ–∏–º –ø–∏–∫–Ω–∏–∫ –∏ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∑–∞–∫–∞—Ç –≤–º–µ—Å—Ç–µ.';
  if(gameState.gift === 'movie') giftLine = '–ü—Ä–∏–≥–ª–∞—à–∞—é –Ω–∞ –≤–µ—á–µ—Ä –∫–∏–Ω–æ ‚Äî —Ç–æ–ª—å–∫–æ –º—ã –∏ –ø–æ–ø–∫–æ—Ä–Ω.';

  // animate and show
  resultTitle.textContent = '–û—Ç–∫—Ä–æ–≤–µ–Ω–∏–µ';
  resultText.textContent = chosenText + (giftLine ? (' ' + giftLine) : '');
  // animate heart and confetti
  heartbeatOnce();
  launchConfetti();
  // add floating hearts trail
  spawnFloatingHearts(12);
});

/* heartbeat animation single pulse */
function heartbeatOnce(){
  bigHeart.animate([
    { transform: 'scale(1)' },
    { transform: 'scale(1.35)' },
    { transform: 'scale(0.95)' },
    { transform: 'scale(1)' }
  ], { duration: 1000, easing:'cubic-bezier(.4,.0,.2,1)' });
}

/* Floating hearts */
function spawnFloatingHearts(n=8){
  const card = document.querySelector('.card');
  for(let i=0;i<n;i++){
    const el = document.createElement('div');
    el.className = 'floating-heart';
    el.textContent = '‚ù§';
    const startX = 40 + Math.random()*80; // percent
    const startY = 80 + Math.random()*20; // percent
    el.style.left = startX + '%';
    el.style.top = startY + '%';
    const dur = 2200 + Math.random()*1800;
    el.style.fontSize = (12 + Math.random()*18) + 'px';
    el.style.animationDuration = dur + 'ms';
    el.style.opacity = 0.9;
    card.appendChild(el);
    setTimeout(()=> el.remove(), dur + 200);
  }
}

/* Confetti canvas implementation (simple particle system) */
const canvas = document.getElementById('confettiCanvas');
const ctx = canvas.getContext('2d');
let confettiParticles = [];
function resizeCanvas(){
  canvas.width = canvas.clientWidth;
  canvas.height = canvas.clientHeight;
}
window.addEventListener('resize', resizeCanvas);
resizeCanvas();

function launchConfetti(){
  // create particles
  const count = 60;
  for(let i=0;i<count;i++){
    confettiParticles.push(createParticle());
  }
  if(!confettiRunning){
    confettiRunning = true;
    requestAnimationFrame(confettiLoop);
  }
}

function createParticle(){
  const w = canvas.width, h = canvas.height;
  const colors = ['#ff4d8a','#ffd166','#6b6dff','#66e2b3','#ff9f43'];
  return {
    x: Math.random()*w,
    y: -10 - Math.random()*h*0.1,
    vx: (Math.random()-0.5)*3,
    vy: 2 + Math.random()*4,
    size: 6 + Math.random()*10,
    rot: Math.random()*360,
    vr: (Math.random()-0.5)*8,
    color: colors[Math.floor(Math.random()*colors.length)],
    ttl: 4000 + Math.random()*2000,
    born: performance.now()
  };
}

let confettiRunning = false;
function confettiLoop(ts){
  ctx.clearRect(0,0,canvas.width,canvas.height);
  const now = performance.now();
  confettiParticles = confettiParticles.filter(p => now - p.born < p.ttl + 800);
  for(const p of confettiParticles){
    p.x += p.vx;
    p.y += p.vy;
    p.vy += 0.03;
    p.rot += p.vr;
    ctx.save();
    ctx.translate(p.x, p.y);
    ctx.rotate(p.rot * Math.PI / 180);
    ctx.fillStyle = p.color;
    ctx.fillRect(-p.size/2, -p.size/2, p.size, p.size * 0.6);
    ctx.restore();
  }
  if(confettiParticles.length > 0){
    requestAnimationFrame(confettiLoop);
  } else {
    confettiRunning = false;
    ctx.clearRect(0,0,canvas.width,canvas.height);
  }
}

/* Small UX: pressing Enter focuses reveal button */
targetInput.addEventListener('keydown', (e)=>{
  if(e.key === 'Enter') revealBtn.focus();
});

/* Make it shareable: update title/message in URL (so link can be sent) */
function updateURLState(){
  const params = new URLSearchParams();
  const name = (targetInput.value || '').trim();
  if(name) params.set('to', name);
  if(gameState.mood) params.set('mood', gameState.mood);
  if(gameState.gift) params.set('gift', gameState.gift);
  const newUrl = location.pathname + '?' + params.toString();
  history.replaceState(null, '', newUrl);
}
[targetInput, choices0, choices1].forEach(el=>{
  el.addEventListener('click', updateURLState);
});
targetInput.addEventListener('input', updateURLState);

/* Read initial state from URL if present */
(function readStateFromURL(){
  const p = new URLSearchParams(location.search);
  if(p.get('to')) targetInput.value = p.get('to');
  if(p.get('mood')) {
    gameState
  if(p.get('mood')) {
    gameState.mood = p.get('mood');
    // –ø–æ–∫–∞–∑–∞—Ç—å –±–ª–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–¥—Å–∫–∞–∑–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
    qBlock.style.display = 'block';
    playHint.style.display = 'block';
  }
  if(p.get('gift')) {
    gameState.gift = p.get('gift');
  }
})();

/* Optional: quick share button that copies current URL */
const shareBtn = document.createElement('button');
shareBtn.className = 'btn secondary';
shareBtn.style.marginTop = '10px';
shareBtn.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É';
shareBtn.addEventListener('click', async ()=>{
  updateURLState();
  try{
    await navigator.clipboard.writeText(location.href);
    shareBtn.textContent = '–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!';
    setTimeout(()=> shareBtn.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 1800);
  }catch(e){
    shareBtn.textContent = '–ù–µ–ª—å–∑—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å';
    setTimeout(()=> shareBtn.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 1800);
  }
});
document.querySelector('.left').appendChild(shareBtn);
</script>
</body>
</html>
